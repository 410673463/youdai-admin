<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utour.youdai.admin.project.bo.mapper.BankAccountMapper">
    
    <resultMap type="BankAccount" id="BankAccountResult">
        <result property="id"    column="id"    />
        <result property="boId"    column="bo_id"    />
        <result property="bankName"    column="bank_name"    />
        <result property="account"    column="account"    />
        <result property="note"    column="note"    />
        <result property="createBy"    column="create_by"    />
        <result property="createDate"    column="create_date"    />
        <result property="modifyDate"    column="modify_date"    />
        <result property="accountName"    column="account_name"    />
    </resultMap>

    <sql id="selectBankAccountVo">
        select id, bo_id, bank_name, account, note, create_by, create_date, modify_date, account_name from bo_bank_account
    </sql>

    <select id="selectBankAccountList" parameterType="BankAccount" resultMap="BankAccountResult">
        <include refid="selectBankAccountVo"/>

        <where>  
            <if test="bankName != null  and bankName != ''"> and bank_name like concat('%', #{bankName}, '%')</if>
            <if test="account != null  and account != ''"> and account = #{account}</if>
            <if test="boId != null  and boId != ''"> and bo_id = #{boId}</if>
        </where>

    </select>
    
    <select id="selectBankAccountById" parameterType="Long" resultMap="BankAccountResult">
        <include refid="selectBankAccountVo"/>
        where id = #{id}
    </select>
    <select id="getAccountsByBoId"  resultMap="BankAccountResult">
        <include refid="selectBankAccountVo"/>
        where bo_id = #{boId}
    </select>

    <insert id="insertBankAccount" parameterType="BankAccount" useGeneratedKeys="true" keyProperty="id">
        insert into bo_bank_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="boId != null">bo_id,</if>
            <if test="bankName != null">bank_name,</if>
            <if test="account != null">account,</if>
            <if test="note != null">note,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createDate != null">create_date,</if>
            <if test="modifyDate != null">modify_date,</if>
            <if test="accountName != null">account_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="boId != null">#{boId},</if>
            <if test="bankName != null">#{bankName},</if>
            <if test="account != null">#{account},</if>
            <if test="note != null">#{note},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="modifyDate != null">#{modifyDate},</if>
            <if test="accountName != null">#{accountName},</if>
         </trim>
    </insert>

    <update id="updateBankAccount" parameterType="BankAccount">
        update bo_bank_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="boId != null">bo_id = #{boId},</if>
            <if test="bankName != null">bank_name = #{bankName},</if>
            <if test="account != null">account = #{account},</if>
            <if test="note != null">note = #{note},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="modifyDate != null">modify_date = #{modifyDate},</if>
            <if test="accountName != null">account_name = #{accountName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBankAccountById" parameterType="Long">
        delete from bo_bank_account where id = #{id}
    </delete>

    <delete id="deleteBankAccountByIds" parameterType="String">
        delete from bo_bank_account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>